{"version":3,"sources":["js/section-exit.js","js/section-clos.js","js/customers.js","js/subtask-1/subtask-1-initial-section-layout.js","js/date-correction.js","js/get-month-or-day-from-date.js","js/create-clients-list-by-birthday-month.js","js/subtask-1/subtask-1.js","js/subtask-2/subtask-2-initial-section-layout.js","js/create-clients-list-by-transfer-month.js","js/subtask-2/subtask-2.js","js/subtask-3/subtask-3-initial-section-layout.js","js/get-email-by-name.js","js/get-names-all-clients.js","js/subtask-3/subtask-3.js","js/subtask-4/subtask-4-initial-section-layout.js","js/find-most-frequent-number.js","js/get-top-day-monthly-transfers.js","js/subtask-4/subtask-4.js","js/subtask-5/subtask-5-initial-section-layout.js","js/creat-clients-list-without-financial-data.js","js/subtask-5/subtask-5.js","js/subtask-6/subtask-6-initial-section-layout.js","js/equalize-monthly-payments.js","js/subtask-6/subtask-6.js","js/subtask-7/subtask-7-initial-section-layout.js","js/creat-clients-list-with-deficit-balances.js","js/subtask-7/subtask-7.js","index.js"],"names":["sectionExit","exports","sectionOpen","document","querySelector","classList","add","setTimeout","style","display","sectionClos","arreyFunctionsRemuveListener","map","item","remove","innerHTML","customers","name","preName","birthDate","address","eMail","finances","accountBalance","latestTransfer","nextDebitDate","lastDebitDate","nextDebitSum","debitIntervall","sectionLayoutTask_1","dateCorrection","date","month","split","day","year","concat","getMonthOrDayFromDate","value","_getMonthOrDayFromDate","require","createClientListByBirthdayMonth","areeyCLients","reduce","arrey","client","clientBirthdayMonth","push","_customers","_subtask1InitialSectionLayout","_dateCorrection","_createClientsListByBirthdayMonth","subtask_1","clientsListMarkup","arrFunctionsRemuveListener","getElementById","valueAsDate","Date","form","submitHandler","event","preventDefault","formDate","target","elements","calendar","correctFormDate","arrClients","clientsList","clientsListTitel","join","addEventListener","removeEventListener","sectionLayoutTask_2","createClientListByTransferMonth","clientTransferMonth","_subtask2InitialSectionLayout","_createClientsListByTransferMonth","subtask_2","sectionLayoutTask_3","getEmailByName","filter","getNamesAllClients","_subtask3InitialSectionLayout","_getEmailByName","_getNamesAllClients","subtask_3","markup","clientName","pName","aMail","textContent","setAttribute","sectionLayoutTask_4","findMostFrequentNumber","arr","frequencyMap","forEach","num","mostFrequent","maxFrequency","_findMostFrequentNumber","getTopDayMonthlyTransfers","arreyDates","_subtask4InitialSectionLayout","_getTopDayMonthlyTransfers","subtask_4","btn","clickHandler","pData","sectionLayoutTask_5","creatClientsListWithoutFinancialData","newArr","newItem","_objectSpread","_subtask5InitialSectionLayout","_creatClientsListWithoutFinancialData","_typeof","o","Symbol","iterator","constructor","prototype","subtask_5","oldList","newList","clientLi","createElement","append","arrDiv","Object","keys","key","clientValue","arrDivClientValue","sectionLayoutTask_6","equalizeMonthlyPayments","newMontlyPayments","newArrayClientsWithChangedPaymentData","structuredClone","toFixed","_subtask6InitialSectionLayout","_equalizeMonthlyPayments","subtask_6","newPrice","inputValue","inputPreis","sectionLayoutTask_7","creatClientsListWithDeficitBalances","arreyDate","nextMonth","padStart","newDate","newDataClients","deficit","_subtask7InitialSectionLayout","_creatClientsListWithDeficitBalances","subtask_7","_sectionExit","_sectionClos","_subtask","_subtask2","_subtask3","_subtask4","_subtask5","_subtask6","_subtask7","_toConsumableArray","r","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","a","_arrayLikeToArray","t","toString","call","slice","Array","from","test","isArray","length","e","n","firstClick","activTask","delaySetTimeout","buttonsList","currentTarget","subtaskNumber","dataset","subtask","_arreyFunctionsRemuve","remuveFunction","apply","_arreyFunctionsRemuve2","_arreyFunctionsRemuve3","_arreyFunctionsRemuve4","_arreyFunctionsRemuve5","_arreyFunctionsRemuve6","_arreyFunctionsRemuve7","console","log"],"mappings":"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","file":"src.0591448b.js","sourceRoot":"..\\src","sourcesContent":["export const sectionExit = (sectionOpen) => {\r\n  sectionOpen = true;\r\n  document.querySelector('.content-section').classList.add('content-section-open');\r\n  setTimeout(() => {\r\n    document.querySelector('.loader-beckdrop').classList.add('loader-beckdrop-is-hidden');\r\n    setTimeout(() => {\r\n      document.querySelector('.loader-beckdrop').style.display = 'none';\r\n    }, 2000);\r\n  }, 5000);\r\n};\r\n","export const sectionClos = (sectionOpen, arreyFunctionsRemuveListener) => {\r\n  sectionOpen = false;\r\n  arreyFunctionsRemuveListener.map((item) => {\r\n    item();\r\n  });\r\n  document.querySelector('.loader-beckdrop').style.display = 'flex';\r\n  document.querySelector('.loader-beckdrop').classList.remove('loader-beckdrop-is-hidden');\r\n  document.querySelector('.content-section').classList.remove('content-section-open');\r\n\r\n  if (document.querySelector('#content')) {\r\n    document.querySelector('#content').innerHTML = '';\r\n  }\r\n};\r\n","export const customers = [\r\n  {\r\n    name: 'Smith',\r\n    preName: 'John',\r\n    birthDate: '12-05-1975',\r\n    address: 'Hauptstraße 5, 12345 München',\r\n    eMail: 'john.smith@test.de',\r\n    finances: {\r\n      accountBalance: 150.0,\r\n      latestTransfer: '01-10-2023',\r\n      nextDebitDate: '15-11-2023',\r\n      lastDebitDate: '15-10-2023',\r\n      nextDebitSum: 15.0,\r\n      debitIntervall: 'monthly',\r\n    },\r\n  },\r\n  {\r\n    name: 'Jones',\r\n    preName: 'Henry',\r\n    birthDate: '23-12-1986',\r\n    address: 'Schulstraße 13, 23456 München',\r\n    eMail: 'henry.jones@test.de',\r\n    finances: {\r\n      accountBalance: 0.0,\r\n      latestTransfer: '02-10-2023',\r\n      nextDebitDate: '15-11-2023',\r\n      lastDebitDate: '15-10-2023',\r\n      nextDebitSum: 10.0,\r\n      debitIntervall: 'monthly',\r\n    },\r\n  },\r\n  {\r\n    name: 'Brown',\r\n    preName: 'George',\r\n    birthDate: '27-01-1978',\r\n    address: 'Gartebstraße 9, 34567 Berlin',\r\n    eMail: 'george.brown@test.de',\r\n    finances: {\r\n      accountBalance: 10.0,\r\n      latestTransfer: '30-09-2023',\r\n      nextDebitDate: '01-11-2023',\r\n      lastDebitDate: '01-10-2023',\r\n      nextDebitSum: 15.0,\r\n      debitIntervall: 'monthly',\r\n    },\r\n  },\r\n  {\r\n    name: 'Wilson',\r\n    preName: 'Oliver',\r\n    birthDate: '24-07-1997',\r\n    address: 'Dorfstraße 1, 45678 Hannover',\r\n    eMail: 'oliver.wilson@test.de',\r\n    finances: {\r\n      accountBalance: 120.0,\r\n      latestTransfer: '15-10-2023',\r\n      nextDebitDate: '01-11-2023',\r\n      lastDebitDate: '01-11-2022',\r\n      nextDebitSum: 120.0,\r\n      debitIntervall: 'annual',\r\n    },\r\n  },\r\n  {\r\n    name: 'Clark',\r\n    preName: 'Elijah',\r\n    birthDate: '18-09-1983',\r\n    address: 'Bahnhofstraße 44, 56789 München',\r\n    eMail: 'elijah.clark@test.de',\r\n    finances: {\r\n      accountBalance: 0.0,\r\n      latestTransfer: '01-11-2022',\r\n      nextDebitDate: '15-11-2023',\r\n      lastDebitDate: '15-11-2022',\r\n      nextDebitSum: 120.0,\r\n      debitIntervall: 'annual',\r\n    },\r\n  },\r\n  {\r\n    name: 'Roberts',\r\n    preName: 'Ella',\r\n    birthDate: '08-06-1994',\r\n    address: 'Birkenweg 12, 67891 Berlin',\r\n    eMail: 'ella.roberts@test.de',\r\n    finances: {\r\n      accountBalance: 1.05,\r\n      latestTransfer: '01-10-2023',\r\n      nextDebitDate: '15-11-2023',\r\n      lastDebitDate: '15-10-2023',\r\n      nextDebitSum: 19.95,\r\n      debitIntervall: 'monthly',\r\n    },\r\n  },\r\n  {\r\n    name: 'Williams',\r\n    preName: 'Evelyn',\r\n    birthDate: '09-08-1946',\r\n    address: 'Lindenstraße 23, 78912 Berlin',\r\n    eMail: 'evelyn.williams@test.de',\r\n    finances: {\r\n      accountBalance: 40.0,\r\n      latestTransfer: '22-10-2023',\r\n      nextDebitDate: '01-11-2023',\r\n      lastDebitDate: '01-08-2023',\r\n      nextDebitSum: 39.95,\r\n      debitIntervall: 'quarterly',\r\n    },\r\n  },\r\n  {\r\n    name: 'Allen',\r\n    preName: 'Olivia',\r\n    birthDate: '29-03-1992',\r\n    address: 'Kirchstraße 45, 89123 Hannover',\r\n    eMail: 'olivia.allen@test.de',\r\n    finances: {\r\n      accountBalance: 15.0,\r\n      latestTransfer: '29-10-2023',\r\n      nextDebitDate: '01-11-2023',\r\n      lastDebitDate: '01-10-2023',\r\n      nextDebitSum: 15.0,\r\n      debitIntervall: 'monthly',\r\n    },\r\n  },\r\n  {\r\n    name: 'Baker',\r\n    preName: 'Emma',\r\n    birthDate: '16-10-1966',\r\n    address: 'Waldstraße 4, 91234 Berlin',\r\n    eMail: 'emma.baker@test.de',\r\n    finances: {\r\n      accountBalance: 0.05,\r\n      latestTransfer: '23-05-2023',\r\n      nextDebitDate: '01-01-2024',\r\n      lastDebitDate: '01-06-2023',\r\n      nextDebitSum: 59.95,\r\n      debitIntervall: 'half-yearly',\r\n    },\r\n  },\r\n  {\r\n    name: 'Green',\r\n    preName: 'Sophia',\r\n    birthDate: '22-04-2001',\r\n    address: 'Amselweg 8, 112233 Hannover',\r\n    eMail: 'sophia.green@test.de',\r\n    finances: {\r\n      accountBalance: 15.0,\r\n      latestTransfer: '22-10-2023',\r\n      nextDebitDate: '15-11-2023',\r\n      lastDebitDate: '15-10-2023',\r\n      nextDebitSum: 15.0,\r\n      debitIntervall: 'monthly',\r\n    },\r\n  },\r\n];\r\n","export const sectionLayoutTask_1 = ` <h2 class=\"task-titel\">Unteraufgaben - 1</h2>\r\n          <p class=\"task\">Wählen Sie den Monat des Jahres, um eine Liste aller Kunden zu erstellen, deren Geburtstag\r\n            in diesen Monat fällt.</p>\r\n          <div class=\"solution-wrapper\">\r\n            <div class=\"calendar\">\r\n              <form class=\"calendar-form\">\r\n                <label class=\"calendar-label\">Datum auswählen:\r\n                  <input class=\"calendar-input\" type=\"date\" id=\"calendar-date\" name=\"calendar\">\r\n                </label>\r\n                <button class=\"calendar-btn\" type=\"submit\">Schicken</button>\r\n              </form>\r\n            </div>\r\n            <div class=\"solution\">\r\n              <h3 class=\"solution-titel\">Liste der Kunden, deren Geburtstag in den ausgewählten Monat fällt:</h3>\r\n              <ul class=\"clients-data\"> </ul>\r\n            </div>\r\n          </div>`;\r\n","export const dateCorrection = (date) => {\r\n  const month = date.split(/[.-]/)[1];\r\n  const day = date.split(/[.-]/)[2];\r\n  const year = date.split(/[.-]/)[0];\r\n  return `${day}-${month}-${year}`;\r\n};\r\n","export const getMonthOrDayFromDate = (date, value) => {\r\n  const month = date.split(/[.-]/)[1];\r\n  const day = date.split(/[.-]/)[0];\r\n  return value === 'month' ? month : day;\r\n};\r\n","import { getMonthOrDayFromDate } from './get-month-or-day-from-date';\r\n\r\nexport const createClientListByBirthdayMonth = (date, areeyCLients) => {\r\n  const month = getMonthOrDayFromDate(date, 'month');\r\n\r\n  const arreyFilteredClients = areeyCLients.reduce((arrey, client) => {\r\n    const clientBirthdayMonth = getMonthOrDayFromDate(\r\n      client.birthDate,\r\n      'month'\r\n    );\r\n    if (month === clientBirthdayMonth) {\r\n      arrey.push(client);\r\n    }\r\n    return arrey;\r\n  }, []);\r\n\r\n  return arreyFilteredClients;\r\n};\r\n","import { customers } from '../customers';\r\nimport { sectionLayoutTask_1 } from './subtask-1-initial-section-layout';\r\nimport { dateCorrection } from '../date-correction';\r\nimport { createClientListByBirthdayMonth } from '../create-clients-list-by-birthday-month';\r\n\r\nexport const subtask_1 = () => {\r\n  let clientsListMarkup = [];\r\n  const arrFunctionsRemuveListener = [];\r\n\r\n  if (document.querySelector('#content')) {\r\n    document.querySelector('#content').innerHTML = sectionLayoutTask_1;\r\n  }\r\n\r\n  if (document.getElementById('calendar-date')) {\r\n    document.getElementById('calendar-date').valueAsDate = new Date();\r\n  }\r\n\r\n  if (document.querySelector('.calendar-form')) {\r\n    const form = document.querySelector('.calendar-form');\r\n    const submitHandler = (event) => {\r\n      event.preventDefault();\r\n      const formDate = event.target.elements.calendar.value;\r\n      const correctFormDate = dateCorrection(formDate);\r\n      const arrClients = createClientListByBirthdayMonth(correctFormDate, customers);\r\n      clientsListMarkup = arrClients.map(\r\n        (client) =>\r\n          ` <li class=\"client\">\r\n                  <ul class=\"client-data-name\">\r\n                    <li>Nachname und Vorname:</li>\r\n                    <li>Geburtsdatum:</li>\r\n                    <li>E-Mail-Adresse:</li>\r\n                    <li>Adresse:</li>\r\n                  </ul>\r\n                  <ul class=\"client-data-value\">\r\n                    <li>${client.name} ${client.preName}</li>\r\n                    <li>${client.birthDate}</li>\r\n                    <li>${client.eMail}</li>\r\n                    <li>${client.address}</li>\r\n                  </ul>\r\n                </li>`\r\n      );\r\n      const clientsList = document.querySelector('.clients-data');\r\n      const clientsListTitel = document.querySelector('.solution-titel');\r\n\r\n      if (clientsList) {\r\n        clientsList.innerHTML = clientsListMarkup.join('');\r\n      }\r\n\r\n      if (clientsListTitel) {\r\n        clientsListTitel.style.display = 'block';\r\n      }\r\n    };\r\n\r\n    form.addEventListener('submit', submitHandler);\r\n\r\n    const deleteSubmitListenerTask_1 = () => {\r\n      form.removeEventListener('submit', submitHandler);\r\n    };\r\n\r\n    arrFunctionsRemuveListener.push(deleteSubmitListenerTask_1);\r\n  }\r\n  return arrFunctionsRemuveListener;\r\n};\r\n","export const sectionLayoutTask_2 = ` <h2 class=\"task-titel\">Unteraufgaben - 2</h2>\r\n          <p class=\"task\">Wählen Sie den Monat des Jahres, um eine Liste aller Kunden zu erstellen, deren nächstes Überweisungsdatum in den gewählten Monat fällt.</p>\r\n          <div class=\"solution-wrapper\">\r\n            <div class=\"calendar\">\r\n              <form class=\"calendar-form\">\r\n                <label class=\"calendar-label\">Datum auswählen:\r\n                  <input class=\"calendar-input\" type=\"date\" id=\"calendar-date\" name=\"calendar\">\r\n                </label>\r\n                <button class=\"calendar-btn\" type=\"submit\">Schicken</button>\r\n              </form>\r\n            </div>\r\n            <div class=\"solution\">\r\n              <h3 class=\"solution-titel\">Liste der Kunden, deren nächstes Überweisungsdatum auf den ausgewählten Monat fällt:</h3>\r\n              <ul class=\"clients-data\"> </ul>\r\n            </div>\r\n          </div>`;\r\n","import { getMonthOrDayFromDate } from './get-month-or-day-from-date';\r\n\r\nexport const createClientListByTransferMonth = (date, areeyCLients) => {\r\n  const month = getMonthOrDayFromDate(date, 'month');\r\n  const arreyFilteredClients = areeyCLients.reduce((arrey, client) => {\r\n    const clientTransferMonth = getMonthOrDayFromDate(\r\n      client.finances.nextDebitDate,\r\n      'month'\r\n    );\r\n    if (month === clientTransferMonth) {\r\n      arrey.push(client);\r\n    }\r\n    return arrey;\r\n  }, []);\r\n\r\n  return arreyFilteredClients;\r\n};\r\n","import { customers } from '../customers';\r\nimport { sectionLayoutTask_2 } from './subtask-2-initial-section-layout';\r\nimport { dateCorrection } from '../date-correction';\r\nimport { createClientListByTransferMonth } from '../create-clients-list-by-transfer-month';\r\n\r\nexport const subtask_2 = () => {\r\n  let clientsListMarkup = [];\r\n  const arrFunctionsRemuveListener = [];\r\n\r\n  if (document.querySelector('#content')) {\r\n    document.querySelector('#content').innerHTML = sectionLayoutTask_2;\r\n  }\r\n\r\n  if (document.getElementById('calendar-date')) {\r\n    document.getElementById('calendar-date').valueAsDate = new Date();\r\n  }\r\n\r\n  if (document.querySelector('.calendar-form')) {\r\n    const form = document.querySelector('.calendar-form');\r\n    const submitHandler = (event) => {\r\n      event.preventDefault();\r\n      const formDate = event.target.elements.calendar.value;\r\n      const correctFormDate = dateCorrection(formDate);\r\n      const arrClients = createClientListByTransferMonth(correctFormDate, customers);\r\n      clientsListMarkup = arrClients.map((client) => {\r\n        return ` <li class=\"client\">\r\n                  <ul class=\"client-data-name\">\r\n                    <li>Nachname und Vorname:</li>\r\n                    <li>Überweisungsdatum:</li>\r\n                    <li>E-Mail-Adresse:</li>\r\n                    <li>Adresse:</li>\r\n                  </ul>\r\n                  <ul class=\"client-data-value\">\r\n                    <li>${client.name} ${client.preName}</li>\r\n                    <li>${client.finances.nextDebitDate}</li>\r\n                    <li>${client.eMail}</li>\r\n                    <li>${client.address}</li>\r\n                  </ul>\r\n                </li>`;\r\n      });\r\n      const clientsList = document.querySelector('.clients-data');\r\n      const clientsListTitel = document.querySelector('.solution-titel');\r\n\r\n      if (clientsList) {\r\n        clientsList.innerHTML = clientsListMarkup.join('');\r\n      }\r\n\r\n      if (clientsListTitel) {\r\n        clientsListTitel.style.display = 'block';\r\n      }\r\n    };\r\n\r\n    form.addEventListener('submit', submitHandler);\r\n\r\n    const deleteSubmitListenerTask_2 = () => {\r\n      form.removeEventListener('submit', submitHandler);\r\n    };\r\n\r\n    arrFunctionsRemuveListener.push(deleteSubmitListenerTask_2);\r\n  }\r\n  return arrFunctionsRemuveListener;\r\n};\r\n","export const sectionLayoutTask_3 = ` <h2 class=\"task-titel\">Unteraufgaben - 3</h2>\r\n          <p class=\"task\">Um die E-Mail-Adresse des Kunden zu erhalten, geben Sie den Kundenamen ein.</p>\r\n          <div class=\"solution-wrapper\">\r\n            <div class=\"form-wrapper\">\r\n              <form class=\"clients-form\">\r\n                <label for=\"clients-name\" class=\"clients-label\">Geben Sie den Kundenamen ein:</label>\r\n                <input list=\"clientsNameListe\"  class=\"clients-input\" type=\"text\" id=\"clients-name\" name=\"clientName\">\r\n                <datalist id=\"clientsNameListe\">\r\n                \r\n                </datalist>\r\n                <button class=\"clients-btn\" type=\"submit\">Schicken</button>\r\n              </form>\r\n            </div>\r\n            <div class=\"solution\">\r\n              <h3 class=\"solution-titel\">Die E-Mail-Adresse des von Ihnen ausgewählten Kunden:</h3>\r\n             <div class=\"client-data\">\r\n               <p class=\"client-name\"></p>\r\n               <a class=\"client-e-mail\"></a>\r\n             </div>\r\n            </div>\r\n          </div>`;\r\n","export const getEmailByName = (name, areeyCLients) => {\r\n  const arreyFilteredClients = areeyCLients.filter(\r\n    client => name === client.name\r\n  );\r\n  return arreyFilteredClients[0].eMail;\r\n};\r\n","export const getNamesAllClients = (customers) => {\r\n  const arrNamesAllClients = customers.map((client) => client.name);\r\n  return arrNamesAllClients;\r\n};\r\n","import { customers } from '../customers';\r\nimport { sectionLayoutTask_3 } from './subtask-3-initial-section-layout';\r\nimport { getEmailByName } from '../get-email-by-name';\r\nimport { getNamesAllClients } from '../get-names-all-clients';\r\n\r\nexport const subtask_3 = () => {\r\n  const arrFunctionsRemuveListener = [];\r\n\r\n  if (document.querySelector('#content')) {\r\n    document.querySelector('#content').innerHTML = sectionLayoutTask_3;\r\n  }\r\n\r\n  if (document.querySelector('#clientsNameListe')) {\r\n    const arrNamesAllClients = getNamesAllClients(customers);\r\n    const markup = arrNamesAllClients.map((name) => `<option>${name}</option>`);\r\n    document.querySelector('#clientsNameListe').innerHTML = markup.join('');\r\n  }\r\n\r\n  if (document.querySelector('.clients-form')) {\r\n    const form = document.querySelector('.clients-form');\r\n    const submitHandler = (event) => {\r\n      event.preventDefault();\r\n      const clientName = event.target.elements.clientName.value;\r\n      const eMail = getEmailByName(clientName, customers);\r\n\r\n      const pName = document.querySelector('.client-name');\r\n      const aMail = document.querySelector('.client-e-mail');\r\n      const clientsListTitel = document.querySelector('.solution-titel');\r\n\r\n      if (clientsListTitel) {\r\n        clientsListTitel.style.display = 'block';\r\n      }\r\n      pName.textContent = `${clientName}:`;\r\n      aMail.setAttribute('href', `mailto:${eMail}`);\r\n      aMail.textContent = eMail;\r\n      if (document.querySelector('.client-data')) {\r\n        document.querySelector('.client-data').style.display = 'flex';\r\n      }\r\n    };\r\n\r\n    form.addEventListener('submit', submitHandler);\r\n\r\n    const deleteSubmitListenerTask_3 = () => {\r\n      form.removeEventListener('submit', submitHandler);\r\n    };\r\n\r\n    arrFunctionsRemuveListener.push(deleteSubmitListenerTask_3);\r\n  }\r\n  return arrFunctionsRemuveListener;\r\n};\r\n","export const sectionLayoutTask_4 = ` <h2 class=\"task-titel\">Unteraufgaben - 4</h2>\r\n          <p class=\"task\">Um den beliebtesten Tag des Monats für das monatliche Überweisungsintervall zu erfahren, klicken Sie auf den Button.</p>\r\n          <div class=\"solution-wrapper\">\r\n            <div class=\"calendar btn-wrap-task-4\">\r\n            <button class=\"calendar-btn\" type=\"button\">Erhalten Sie den beliebtesten Tag</button>\r\n            </div>\r\n            <div class=\"solution\">\r\n              <h3 class=\"solution-titel\">Den beliebtesten Tag des Monats für das monatliche Überweisungsintervall ist:</h3>\r\n              <p class=\"solution-text-tag\"></p>\r\n              </div>\r\n          </div>`;\r\n","export function findMostFrequentNumber(arr) {\r\n  const frequencyMap = {}; // Объект для хранения частоты чисел\r\n  // Подсчитываем количество вхождений каждого числа в массив\r\n  arr.forEach(num => {\r\n    frequencyMap[num] = (frequencyMap[num] || 0) + 1;\r\n  });\r\n  // Находим число с максимальной частотой\r\n  let mostFrequent = null;\r\n  let maxFrequency = 0;\r\n\r\n  for (const num in frequencyMap) {\r\n    if (frequencyMap[num] > maxFrequency) {\r\n      maxFrequency = frequencyMap[num];\r\n      mostFrequent = num;\r\n    }\r\n  }\r\n  return mostFrequent;\r\n}\r\n","import { getMonthOrDayFromDate } from './get-month-or-day-from-date';\r\nimport { findMostFrequentNumber } from './find-most-frequent-number';\r\n\r\nexport const getTopDayMonthlyTransfers = areeyCLients => {\r\n  const arreyDates = areeyCLients.reduce((arr, client) => {\r\n    if (client.finances.debitIntervall === 'monthly') {\r\n      arr.push(getMonthOrDayFromDate(client.finances.nextDebitDate, 'day'));\r\n    }\r\n    return arr;\r\n  }, []);\r\n  return findMostFrequentNumber(arreyDates);\r\n};\r\n","import { customers } from '../customers';\r\nimport { sectionLayoutTask_4 } from './subtask-4-initial-section-layout';\r\nimport { getTopDayMonthlyTransfers } from '../get-top-day-monthly-transfers';\r\n\r\nexport const subtask_4 = () => {\r\n  const arrFunctionsRemuveListener = [];\r\n\r\n  if (document.querySelector('#content')) {\r\n    document.querySelector('#content').innerHTML = sectionLayoutTask_4;\r\n  }\r\n\r\n  if (document.querySelector('.calendar-btn')) {\r\n    const btn = document.querySelector('.calendar-btn');\r\n    const clickHandler = () => {\r\n      const day = getTopDayMonthlyTransfers(customers);\r\n\r\n      const pData = document.querySelector('.solution-text-tag');\r\n      const clientsListTitel = document.querySelector('.solution-titel');\r\n\r\n      if (clientsListTitel) {\r\n        clientsListTitel.style.display = 'block';\r\n      }\r\n\r\n      pData.textContent = day;\r\n      pData.classList.add('solution-text-tag-style');\r\n    };\r\n\r\n    btn.addEventListener('click', clickHandler);\r\n\r\n    const deleteSubmitListenerTask_1 = () => {\r\n      btn.removeEventListener('click', clickHandler);\r\n    };\r\n    arrFunctionsRemuveListener.push(deleteSubmitListenerTask_1);\r\n  }\r\n  return arrFunctionsRemuveListener;\r\n};\r\n","export const sectionLayoutTask_5 = ` <h2 class=\"task-titel\">Unteraufgaben - 5</h2>\r\n          <p class=\"task\">Um aus Datenschutzgründen eine neue Kundenliste ohne Finanzdaten zu erstellen, klicken Sie bitte auf den Button.</p>\r\n         <div class=\"solution-wrapper\">\r\n            <div class=\"calendar btn-wrap-task-4\">\r\n            <button class=\"calendar-btn\" type=\"button\">Neue Kundenliste ohne Finanzdaten erstellen</button>\r\n            </div>\r\n            <div class=\"solution solution-task-5\">\r\n            <div class=\"output-old-list-wrap\">\r\n            <h3 class=\"output-old-list-titel\">Originalobjekt</h3>\r\n              <ul class=\"output-old-list\"></ul>\r\n            </div>\r\n            <div class=\"output-new-list-wrap\">\r\n            <h3 class=\"output-new-list-titel\">Resultatobjekt</h3>\r\n              <ul class=\"output-new-list\"></ul>\r\n            </div>              \r\n            </div>\r\n          </div>`;\r\n","export const creatClientsListWithoutFinancialData = areeyCLients => {\r\n  const newArr = [];\r\n  areeyCLients.map(client => {\r\n    const newItem = { ...client };\r\n    delete newItem.finances;\r\n    newArr.push(newItem);\r\n  });\r\n  return newArr;\r\n};\r\n","import { customers } from '../customers';\r\nimport { sectionLayoutTask_5 } from './subtask-5-initial-section-layout';\r\nimport { creatClientsListWithoutFinancialData } from '../creat-clients-list-without-financial-data';\r\n\r\nexport const subtask_5 = () => {\r\n  const arrFunctionsRemuveListener = [];\r\n\r\n  if (document.querySelector('#content')) {\r\n    document.querySelector('#content').innerHTML = sectionLayoutTask_5;\r\n  }\r\n  const oldList = document.querySelector('.output-old-list');\r\n  const newList = document.querySelector('.output-new-list');\r\n\r\n  if (oldList) {\r\n    customers.map((client) => {\r\n      const clientLi = document.createElement('li');\r\n      oldList.append(clientLi);\r\n      const keys = Object.keys(client);\r\n      const arrDiv = keys.map((key) => {\r\n        let clientValue = client[key];\r\n        if (typeof clientValue === 'object') {\r\n          const keys = Object.keys(clientValue);\r\n          const arrDivClientValue = keys.map(\r\n            (key) =>\r\n              `<div class=\"client-data-task-5\"><div class=\"client-key\">${key}:</div><div class=\"client-value\">${clientValue[key]}</div></div>`\r\n          );\r\n          clientValue = arrDivClientValue.join('');\r\n        }\r\n        return `<div class=\"client-data-task-5\"><div class=\"client-key\">${key}:</div><div class=\"client-value\">${clientValue}</div></div>`;\r\n      });\r\n\r\n      clientLi.innerHTML = arrDiv.join('');\r\n    });\r\n  }\r\n\r\n  if (document.querySelector('.calendar-btn')) {\r\n    const btn = document.querySelector('.calendar-btn');\r\n    const clickHandler = () => {\r\n      if (newList) {\r\n        creatClientsListWithoutFinancialData(customers).map((client) => {\r\n          const clientLi = document.createElement('li');\r\n          newList.append(clientLi);\r\n          const keys = Object.keys(client);\r\n          const arrDiv = keys.map((key) => {\r\n            let clientValue = client[key];\r\n            if (typeof clientValue === 'object') {\r\n              const keys = Object.keys(clientValue);\r\n              const arrDivClientValue = keys.map(\r\n                (key) =>\r\n                  `<div class=\"client-data-task-5\"><div class=\"client-key\">${key}:</div><div class=\"client-value\">${clientValue[key]}</div></div>`\r\n              );\r\n              clientValue = arrDivClientValue.join('');\r\n            }\r\n            return `<div class=\"client-data-task-5\"><div class=\"client-key\">${key}:</div><div class=\"client-value\">${clientValue}</div></div>`;\r\n          });\r\n\r\n          clientLi.innerHTML = arrDiv.join('');\r\n        });\r\n      }\r\n      document.querySelector('.output-new-list-titel').style.display = 'block';\r\n    };\r\n\r\n    btn.addEventListener('click', clickHandler);\r\n\r\n    const deleteSubmitListenerTask_5 = () => {\r\n      btn.removeEventListener('click', clickHandler);\r\n    };\r\n\r\n    arrFunctionsRemuveListener.push(deleteSubmitListenerTask_5);\r\n  }\r\n  return arrFunctionsRemuveListener;\r\n};\r\n","export const sectionLayoutTask_6 = ` <h2 class=\"task-titel\">Unteraufgaben - 6</h2>\r\n          <p class=\"task\">Um die monatliche Gebühr für alle Kunden zu vereinheitlichen, geben Sie den neuen monatlichen Preis ein und drücken Sie den Button.</p>\r\n         <div class=\"solution-wrapper\">\r\n            <div class=\"calendar\">\r\n              <form class=\"calendar-form form-task-6\">\r\n                <label class=\"calendar-label\">Euro pro Monat:\r\n                  <input class=\"calendar-input\" id=\"input-value-task-6\" type=\"number\" value=\"19.95\"  step=\"0.01\" name=\"inputPreis\">\r\n                </label>\r\n               <button class=\"calendar-btn form-btn-task-6\" type=\"submit\">Kundenliste mit neue Finanzdaten erstellen</button>\r\n              </form>\r\n            </div>\r\n            <div class=\"solution solution-task-5\">\r\n            <div class=\"output-old-list-wrap\">\r\n            <h3 class=\"output-old-list-titel\">Originalobjekt</h3>\r\n              <ul class=\"output-old-list\"></ul>\r\n            </div>\r\n            <div class=\"output-new-list-wrap\">\r\n            <h3 class=\"output-new-list-titel\">Resultatobjekt</h3>\r\n              <ul class=\"output-new-list\"></ul>\r\n            </div>              \r\n            </div>\r\n          </div>`;\r\n","export const equalizeMonthlyPayments = (areeyCLients, newMontlyPayments) => {\r\n  const newArrayClientsWithChangedPaymentData = [];\r\n  areeyCLients.map(client => {\r\n    if (client.finances.debitIntervall === 'monthly') {\r\n      const newItem = structuredClone(client);\r\n      newItem.finances.nextDebitSum = (newMontlyPayments * 1).toFixed(2);\r\n      newArrayClientsWithChangedPaymentData.push(newItem);\r\n    }\r\n    if (client.finances.debitIntervall === 'quarterly') {\r\n      const newItem = structuredClone(client);\r\n      newItem.finances.nextDebitSum = (newMontlyPayments * 3).toFixed(2);\r\n      newArrayClientsWithChangedPaymentData.push(newItem);\r\n    }\r\n    if (client.finances.debitIntervall === 'half-yearly') {\r\n      const newItem = structuredClone(client);\r\n      newItem.finances.nextDebitSum = (newMontlyPayments * 6).toFixed(2);\r\n      newArrayClientsWithChangedPaymentData.push(newItem);\r\n    }\r\n    if (client.finances.debitIntervall === 'annual') {\r\n      const newItem = structuredClone(client);\r\n      newItem.finances.nextDebitSum = (newMontlyPayments * 12).toFixed(2);\r\n      newArrayClientsWithChangedPaymentData.push(newItem);\r\n    }\r\n  });\r\n  return newArrayClientsWithChangedPaymentData;\r\n};\r\n","import { customers } from '../customers';\r\nimport { sectionLayoutTask_6 } from './subtask-6-initial-section-layout';\r\nimport { equalizeMonthlyPayments } from '../equalize-monthly-payments';\r\n\r\nexport const subtask_6 = () => {\r\n  const arrFunctionsRemuveListener = [];\r\n  let newPrice = '';\r\n\r\n  if (document.querySelector('#content')) {\r\n    document.querySelector('#content').innerHTML = sectionLayoutTask_6;\r\n  }\r\n  const oldList = document.querySelector('.output-old-list');\r\n  const newList = document.querySelector('.output-new-list');\r\n\r\n  if (oldList) {\r\n    customers.map((client) => {\r\n      const clientLi = document.createElement('li');\r\n      oldList.append(clientLi);\r\n      const keys = Object.keys(client);\r\n      const arrDiv = keys.map((key) => {\r\n        let clientValue = client[key];\r\n        if (typeof clientValue === 'object') {\r\n          const keys = Object.keys(clientValue);\r\n          const arrDivClientValue = keys.map(\r\n            (key) =>\r\n              `<div class=\"client-data-task-5\"><div class=\"client-key\">${key}:</div><div class=\"client-value\">${clientValue[key]}</div></div>`\r\n          );\r\n          clientValue = arrDivClientValue.join('');\r\n        }\r\n        return `<div class=\"client-data-task-5\"><div class=\"client-key\">${key}:</div><div class=\"client-value\">${clientValue}</div></div>`;\r\n      });\r\n\r\n      clientLi.innerHTML = arrDiv.join('');\r\n    });\r\n  }\r\n\r\n  if (document.querySelector('.calendar-form')) {\r\n    const form = document.querySelector('.calendar-form');\r\n    const submitHandler = (event) => {\r\n      event.preventDefault();\r\n\r\n      if (newList) {\r\n        const inputValue = event.target.elements.inputPreis.value;\r\n        if (newPrice === inputValue) {\r\n          return;\r\n        }\r\n        newPrice = inputValue;\r\n        newList.innerHTML = '';\r\n        equalizeMonthlyPayments(customers, inputValue).map((client) => {\r\n          const clientLi = document.createElement('li');\r\n          newList.append(clientLi);\r\n          const keys = Object.keys(client);\r\n          const arrDiv = keys.map((key) => {\r\n            let clientValue = client[key];\r\n            if (typeof clientValue === 'object') {\r\n              const keys = Object.keys(clientValue);\r\n              const arrDivClientValue = keys.map(\r\n                (key) =>\r\n                  `<div class=\"client-data-task-5\"><div class=\"client-key\">${key}:</div><div class=\"client-value\">${clientValue[key]}</div></div>`\r\n              );\r\n              clientValue = arrDivClientValue.join('');\r\n            }\r\n            return `<div class=\"client-data-task-5\"><div class=\"client-key\">${key}:</div><div class=\"client-value\">${clientValue}</div></div>`;\r\n          });\r\n\r\n          clientLi.innerHTML = arrDiv.join('');\r\n        });\r\n      }\r\n      document.querySelector('.output-new-list-titel').style.display = 'block';\r\n    };\r\n\r\n    form.addEventListener('submit', submitHandler);\r\n\r\n    const deleteSubmitListenerTask_6 = () => {\r\n      form.removeEventListener('submit', submitHandler);\r\n    };\r\n\r\n    arrFunctionsRemuveListener.push(deleteSubmitListenerTask_6);\r\n  }\r\n  return arrFunctionsRemuveListener;\r\n};\r\n","export const sectionLayoutTask_7 = ` <h2 class=\"task-titel\">Unteraufgaben - 7</h2>\r\n          <p class=\"task\">Klicken Sie auf den Button, um eine Liste der Kunden zu erstellen, deren nächster Überweisungstermin im nächsten Monat liegt, die aber nicht genügend Geld auf ihrem Konto haben, um zu bezahlen.</p>\r\n          <div class=\"solution-wrapper\">\r\n            <div class=\"calendar\">\r\n              <form class=\"calendar-form\">\r\n                <label class=\"calendar-label\">Datum auswählen:\r\n                  <input class=\"calendar-input\" type=\"date\" value=\"2023-10-27\" id=\"calendar-date\" name=\"calendar\">\r\n                </label>\r\n                <button class=\"calendar-btn\" type=\"submit\">Schicken</button>\r\n              </form>\r\n            </div>\r\n            <div class=\"solution\">\r\n              <h3 class=\"solution-titel\">Liste der Kunden, deren Konto für die nächste Überweisung nicht reicht:</h3>\r\n              <ul class=\"clients-data\"> </ul>\r\n            </div>\r\n          </div>`;\r\n","import { createClientListByTransferMonth } from './create-clients-list-by-transfer-month';\r\n\r\nexport const creatClientsListWithDeficitBalances = (date, areeyCLients) => {\r\n  const arreyDate = date.split(/[.-]/);\r\n  const nextMonth = date.split(/[.-]/)[1] === '12' ? '01' : `${+date.split(/[.-]/)[1] + 1}`.padStart(2, '0');\r\n  arreyDate[1] = nextMonth;\r\n  const newDate = arreyDate.join('-');\r\n  const arrayClientsToPayNextMonth = createClientListByTransferMonth(newDate, areeyCLients);\r\n  const arrayCclientsWithDeficitBalances = arrayClientsToPayNextMonth.filter(\r\n    (client) => client.finances.accountBalance < client.finances.nextDebitSum\r\n  );\r\n  const dataClientsWithDeficitBalance = arrayCclientsWithDeficitBalances.reduce((arr, client) => {\r\n    const newDataClients = {\r\n      name: client.name + ' ' + client.preName,\r\n      eMail: client.eMail,\r\n      address: client.address,\r\n      deficit: (client.finances.accountBalance - client.finances.nextDebitSum).toFixed(2),\r\n    };\r\n    arr.push(newDataClients);\r\n    return arr;\r\n  }, []);\r\n  return dataClientsWithDeficitBalance;\r\n};\r\n","import { customers } from '../customers';\r\nimport { sectionLayoutTask_7 } from './subtask-7-initial-section-layout';\r\nimport { dateCorrection } from '../date-correction';\r\nimport { creatClientsListWithDeficitBalances } from '../creat-clients-list-with-deficit-balances';\r\n\r\nexport const subtask_7 = () => {\r\n  let clientsListMarkup = [];\r\n  const arrFunctionsRemuveListener = [];\r\n\r\n  if (document.querySelector('#content')) {\r\n    document.querySelector('#content').innerHTML = sectionLayoutTask_7;\r\n  }\r\n\r\n  if (document.querySelector('.calendar-form')) {\r\n    const form = document.querySelector('.calendar-form');\r\n    const submitHandler = (event) => {\r\n      event.preventDefault();\r\n      const formDate = event.target.elements.calendar.value;\r\n      const correctFormDate = dateCorrection(formDate);\r\n      const arrClients = creatClientsListWithDeficitBalances(correctFormDate, customers);\r\n      clientsListMarkup = arrClients.map(\r\n        (client) =>\r\n          ` <li class=\"client\">\r\n                  <ul class=\"client-data-name\">\r\n                    <li>Name:</li>\r\n                    <li>Dem fehlenden Guthaben:</li>\r\n                    <li>E-Mail-Adresse:</li>\r\n                    <li>Adresse:</li>\r\n                  </ul>\r\n                  <ul class=\"client-data-value\">\r\n                    <li>${client.name}</li>\r\n                    <li>${client.deficit}</li>\r\n                    <li>${client.eMail}</li>\r\n                    <li>${client.address}</li>\r\n                  </ul>\r\n                </li>`\r\n      );\r\n      const clientsList = document.querySelector('.clients-data');\r\n      const clientsListTitel = document.querySelector('.solution-titel');\r\n\r\n      if (clientsList) {\r\n        clientsList.innerHTML = clientsListMarkup.join('');\r\n      }\r\n\r\n      if (clientsListTitel) {\r\n        clientsListTitel.style.display = 'block';\r\n      }\r\n    };\r\n\r\n    form.addEventListener('submit', submitHandler);\r\n\r\n    const deleteSubmitListenerTask_7 = () => {\r\n      form.removeEventListener('submit', submitHandler);\r\n    };\r\n\r\n    arrFunctionsRemuveListener.push(deleteSubmitListenerTask_7);\r\n  }\r\n  return arrFunctionsRemuveListener;\r\n};\r\n","import { sectionExit } from './js/section-exit';\r\nimport { sectionClos } from './js/section-clos';\r\nimport { subtask_1 } from './js/subtask-1/subtask-1';\r\nimport { subtask_2 } from './js/subtask-2/subtask-2';\r\nimport { subtask_3 } from './js/subtask-3/subtask-3';\r\nimport { subtask_4 } from './js/subtask-4/subtask-4';\r\nimport { subtask_5 } from './js/subtask-5/subtask-5';\r\nimport { subtask_6 } from './js/subtask-6/subtask-6';\r\nimport { subtask_7 } from './js/subtask-7/subtask-7';\r\n\r\nlet firstClick = false;\r\nlet sectionOpen = false;\r\nlet activTask = '';\r\nlet delaySetTimeout = 0;\r\nlet arreyFunctionsRemuveListener = [];\r\n\r\nconst buttonsList = document.querySelector('.task-nav');\r\nbuttonsList.addEventListener('click', (e) => {\r\n  if (e.target !== e.currentTarget) {\r\n    if (!firstClick) {\r\n      firstClick = true;\r\n      document.querySelector('.welcome-section').classList.add('welcome-section-invisibility');\r\n    }\r\n    const subtaskNumber = e.target.dataset.subtask;\r\n\r\n    if (activTask !== e.target) {\r\n      if (activTask !== '') {\r\n        activTask.classList.remove('task-nav-item-activ');\r\n        sectionClos(sectionOpen, arreyFunctionsRemuveListener);\r\n        arreyFunctionsRemuveListener = [];\r\n        delaySetTimeout = 4000;\r\n      }\r\n      activTask = e.target;\r\n      activTask.classList.add('task-nav-item-activ');\r\n\r\n      switch (subtaskNumber) {\r\n        case '1':\r\n          setTimeout(() => {\r\n            sectionExit(sectionOpen);\r\n            const remuveFunction = subtask_1();\r\n            arreyFunctionsRemuveListener.push(...remuveFunction);\r\n          }, delaySetTimeout);\r\n          break;\r\n        case '2':\r\n          setTimeout(() => {\r\n            sectionExit(sectionOpen);\r\n            const remuveFunction = subtask_2();\r\n            arreyFunctionsRemuveListener.push(...remuveFunction);\r\n          }, delaySetTimeout);\r\n          break;\r\n        case '3':\r\n          setTimeout(() => {\r\n            sectionExit(sectionOpen);\r\n            const remuveFunction = subtask_3();\r\n            arreyFunctionsRemuveListener.push(...remuveFunction);\r\n          }, delaySetTimeout);\r\n          break;\r\n        case '4':\r\n          setTimeout(() => {\r\n            sectionExit(sectionOpen);\r\n            const remuveFunction = subtask_4();\r\n            arreyFunctionsRemuveListener.push(...remuveFunction);\r\n          }, delaySetTimeout);\r\n          break;\r\n        case '5':\r\n          setTimeout(() => {\r\n            sectionExit(sectionOpen);\r\n            const remuveFunction = subtask_5();\r\n            arreyFunctionsRemuveListener.push(...remuveFunction);\r\n          }, delaySetTimeout);\r\n          break;\r\n        case '6':\r\n          setTimeout(() => {\r\n            sectionExit(sectionOpen);\r\n            const remuveFunction = subtask_6();\r\n            arreyFunctionsRemuveListener.push(...remuveFunction);\r\n          }, delaySetTimeout);\r\n          break;\r\n        case '7':\r\n          setTimeout(() => {\r\n            sectionExit(sectionOpen);\r\n            const remuveFunction = subtask_7();\r\n            arreyFunctionsRemuveListener.push(...remuveFunction);\r\n          }, delaySetTimeout);\r\n          break;\r\n\r\n        default:\r\n          console.log('Invalid subscription type');\r\n      }\r\n    }\r\n  }\r\n});\r\n"]}