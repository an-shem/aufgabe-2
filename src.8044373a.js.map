{"version":3,"sources":["js/customers.js","js/get-month-or-day-from-date.js","js/create-clients-list-by-birthday-month.js","js/create-clients-list-by-transfer-month.js","js/get-email-by-name.js","js/find-most-frequent-number.js","js/get-top-day-monthly-transfers.js","js/creat-clients-list-without-financial-data.js","js/equalize-monthly-payments.js","js/creat-clients-list-with-deficit-balances.js","js/section-exit.js","js/section-clos.js","js/subtask-1/subtask-1-initial-section-layout.js","js/date-correction.js","js/subtask-1/subtask-1.js","js/subtask-2/subtask-2-initial-section-layout.js","js/subtask-2/subtask-2.js","js/subtask-3/subtask-3-initial-section-layout.js","js/get-names-all-clients.js","js/subtask-3/subtask-3.js","index.js"],"names":["customers","exports","name","preName","birthDate","address","eMail","finances","accountBalance","latestTransfer","nextDebitDate","lastDebitDate","nextDebitSum","debitIntervall","getMonthOrDayFromDate","date","value","month","split","day","_getMonthOrDayFromDate","require","createClientListByBirthdayMonth","areeyCLients","reduce","arrey","client","clientBirthdayMonth","push","createClientListByTransferMonth","clientTransferMonth","getEmailByName","filter","findMostFrequentNumber","arr","frequencyMap","forEach","num","mostFrequent","maxFrequency","_findMostFrequentNumber","getTopDayMonthlyTransfers","arreyDates","creatClientsListWithoutFinancialData","newArr","map","newItem","_objectSpread","equalizeMonthlyPayments","newMontlyPayments","newArrayClientsWithChangedPaymentData","structuredClone","toFixed","_createClientsListByTransferMonth","creatClientsListWithDeficitBalances","arreyDate","nextMonth","concat","padStart","newDate","join","newDataClients","deficit","sectionExit","sectionOpen","document","querySelector","classList","add","setTimeout","style","display","sectionClos","arreyFunctionsRemuveListener","item","remove","innerHTML","sectionLayoutTask_1","dateCorrection","year","_customers","_subtask1InitialSectionLayout","_dateCorrection","_createClientsListByBirthdayMonth","subtask_1","clientsListMarkup","arrFunctionsRemuveListener","getElementById","valueAsDate","Date","form","submitHandler","event","preventDefault","formDate","target","elements","calendar","correctFormDate","arrClients","clientsList","clientsListTitel","addEventListener","removeEventListener","console","log","sectionLayoutTask_2","_subtask2InitialSectionLayout","subtask_2","sectionLayoutTask_3","getNamesAllClients","_subtask3InitialSectionLayout","_getEmailByName","_getNamesAllClients","subtask_3","markup","clientName","pName","aMail","textContent","setAttribute","_getTopDayMonthlyTransfers","_creatClientsListWithoutFinancialData","_equalizeMonthlyPayments","_creatClientsListWithDeficitBalances","_sectionExit","_sectionClos","_subtask","_subtask2","_subtask3","_toConsumableArray","r","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","a","_arrayLikeToArray","t","toString","call","slice","constructor","Array","from","test","Symbol","iterator","isArray","length","e","n","firstClick","activTask","delaySetTimeout","buttonsList","currentTarget","subtaskNumber","dataset","subtask","_arreyFunctionsRemuve","remuveFunction","apply","_arreyFunctionsRemuve2","_arreyFunctionsRemuve3"],"mappings":"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","file":"src.8044373a.js","sourceRoot":"..\\src","sourcesContent":["export const customers = [\r\n  {\r\n    name: 'Smith',\r\n    preName: 'John',\r\n    birthDate: '12-05-1975',\r\n    address: 'Hauptstraße 5, 12345 München',\r\n    eMail: 'john.smith@test.de',\r\n    finances: {\r\n      accountBalance: 150.0,\r\n      latestTransfer: '01-10-2023',\r\n      nextDebitDate: '15-11-2023',\r\n      lastDebitDate: '15-10-2023',\r\n      nextDebitSum: 15.0,\r\n      debitIntervall: 'monthly',\r\n    },\r\n  },\r\n  {\r\n    name: 'Jones',\r\n    preName: 'Henry',\r\n    birthDate: '23-12-1986',\r\n    address: 'Schulstraße 13, 23456 München',\r\n    eMail: 'henry.jones@test.de',\r\n    finances: {\r\n      accountBalance: 0.0,\r\n      latestTransfer: '02-10-2023',\r\n      nextDebitDate: '15-11-2023',\r\n      lastDebitDate: '15-10-2023',\r\n      nextDebitSum: 10.0,\r\n      debitIntervall: 'monthly',\r\n    },\r\n  },\r\n  {\r\n    name: 'Brown',\r\n    preName: 'George',\r\n    birthDate: '27-01-1978',\r\n    address: 'Gartebstraße 9, 34567 Berlin',\r\n    eMail: 'george.brown@test.de',\r\n    finances: {\r\n      accountBalance: 10.0,\r\n      latestTransfer: '30-09-2023',\r\n      nextDebitDate: '01-11-2023',\r\n      lastDebitDate: '01-10-2023',\r\n      nextDebitSum: 15.0,\r\n      debitIntervall: 'monthly',\r\n    },\r\n  },\r\n  {\r\n    name: 'Wilson',\r\n    preName: 'Oliver',\r\n    birthDate: '24-07-1997',\r\n    address: 'Dorfstraße 1, 45678 Hannover',\r\n    eMail: 'oliver.wilson@test.de',\r\n    finances: {\r\n      accountBalance: 120.0,\r\n      latestTransfer: '15-10-2023',\r\n      nextDebitDate: '01-11-2023',\r\n      lastDebitDate: '01-11-2022',\r\n      nextDebitSum: 120.0,\r\n      debitIntervall: 'annual',\r\n    },\r\n  },\r\n  {\r\n    name: 'Clark',\r\n    preName: 'Elijah',\r\n    birthDate: '18-09-1983',\r\n    address: 'Bahnhofstraße 44, 56789 München',\r\n    eMail: 'elijah.clark@test.de',\r\n    finances: {\r\n      accountBalance: 0.0,\r\n      latestTransfer: '01-11-2022',\r\n      nextDebitDate: '15-11-2023',\r\n      lastDebitDate: '15-11-2022',\r\n      nextDebitSum: 120.0,\r\n      debitIntervall: 'annual',\r\n    },\r\n  },\r\n  {\r\n    name: 'Roberts',\r\n    preName: 'Ella',\r\n    birthDate: '08-06-1994',\r\n    address: 'Birkenweg 12, 67891 Berlin',\r\n    eMail: 'ella.roberts@test.de',\r\n    finances: {\r\n      accountBalance: 1.05,\r\n      latestTransfer: '01-10-2023',\r\n      nextDebitDate: '15-11-2023',\r\n      lastDebitDate: '15-10-2023',\r\n      nextDebitSum: 19.95,\r\n      debitIntervall: 'monthly',\r\n    },\r\n  },\r\n  {\r\n    name: 'Williams',\r\n    preName: 'Evelyn',\r\n    birthDate: '09-08-1946',\r\n    address: 'Lindenstraße 23, 78912 Berlin',\r\n    eMail: 'evelyn.williams@test.de',\r\n    finances: {\r\n      accountBalance: 40.0,\r\n      latestTransfer: '22-10-2023',\r\n      nextDebitDate: '01-11-2023',\r\n      lastDebitDate: '01-08-2023',\r\n      nextDebitSum: 39.95,\r\n      debitIntervall: 'quarterly',\r\n    },\r\n  },\r\n  {\r\n    name: 'Allen',\r\n    preName: 'Olivia',\r\n    birthDate: '29-03-1992',\r\n    address: 'Kirchstraße 45, 89123 Hannover',\r\n    eMail: 'olivia.allen@test.de',\r\n    finances: {\r\n      accountBalance: 15.0,\r\n      latestTransfer: '29-10-2023',\r\n      nextDebitDate: '01-11-2023',\r\n      lastDebitDate: '01-10-2023',\r\n      nextDebitSum: 15.0,\r\n      debitIntervall: 'monthly',\r\n    },\r\n  },\r\n  {\r\n    name: 'Baker',\r\n    preName: 'Emma',\r\n    birthDate: '16-10-1966',\r\n    address: 'Waldstraße 4, 91234 Berlin',\r\n    eMail: 'emma.baker@test.de',\r\n    finances: {\r\n      accountBalance: 0.05,\r\n      latestTransfer: '23-05-2023',\r\n      nextDebitDate: '01-01-2024',\r\n      lastDebitDate: '01-06-2023',\r\n      nextDebitSum: 59.95,\r\n      debitIntervall: 'half-yearly',\r\n    },\r\n  },\r\n  {\r\n    name: 'Green',\r\n    preName: 'Sophia',\r\n    birthDate: '22-04-2001',\r\n    address: 'Amselweg 8, 112233 Hannover',\r\n    eMail: 'sophia.green@test.de',\r\n    finances: {\r\n      accountBalance: 15.0,\r\n      latestTransfer: '22-10-2023',\r\n      nextDebitDate: '15-11-2023',\r\n      lastDebitDate: '15-10-2023',\r\n      nextDebitSum: 15.0,\r\n      debitIntervall: 'monthly',\r\n    },\r\n  },\r\n];\r\n","export const getMonthOrDayFromDate = (date, value) => {\r\n  const month = date.split(/[.-]/)[1];\r\n  const day = date.split(/[.-]/)[0];\r\n  return value === 'month' ? month : day;\r\n};\r\n","import { getMonthOrDayFromDate } from './get-month-or-day-from-date';\r\n\r\nexport const createClientListByBirthdayMonth = (date, areeyCLients) => {\r\n  const month = getMonthOrDayFromDate(date, 'month');\r\n\r\n  const arreyFilteredClients = areeyCLients.reduce((arrey, client) => {\r\n    const clientBirthdayMonth = getMonthOrDayFromDate(\r\n      client.birthDate,\r\n      'month'\r\n    );\r\n    if (month === clientBirthdayMonth) {\r\n      arrey.push(client);\r\n    }\r\n    return arrey;\r\n  }, []);\r\n\r\n  return arreyFilteredClients;\r\n};\r\n","import { getMonthOrDayFromDate } from './get-month-or-day-from-date';\r\n\r\nexport const createClientListByTransferMonth = (date, areeyCLients) => {\r\n  const month = getMonthOrDayFromDate(date, 'month');\r\n  const arreyFilteredClients = areeyCLients.reduce((arrey, client) => {\r\n    const clientTransferMonth = getMonthOrDayFromDate(\r\n      client.finances.nextDebitDate,\r\n      'month'\r\n    );\r\n    if (month === clientTransferMonth) {\r\n      arrey.push(client);\r\n    }\r\n    return arrey;\r\n  }, []);\r\n\r\n  return arreyFilteredClients;\r\n};\r\n","export const getEmailByName = (name, areeyCLients) => {\r\n  const arreyFilteredClients = areeyCLients.filter(\r\n    client => name === client.name\r\n  );\r\n  return arreyFilteredClients[0].eMail;\r\n};\r\n","export function findMostFrequentNumber(arr) {\r\n  const frequencyMap = {}; // Объект для хранения частоты чисел\r\n  // Подсчитываем количество вхождений каждого числа в массив\r\n  arr.forEach(num => {\r\n    frequencyMap[num] = (frequencyMap[num] || 0) + 1;\r\n  });\r\n  // Находим число с максимальной частотой\r\n  let mostFrequent = null;\r\n  let maxFrequency = 0;\r\n\r\n  for (const num in frequencyMap) {\r\n    if (frequencyMap[num] > maxFrequency) {\r\n      maxFrequency = frequencyMap[num];\r\n      mostFrequent = num;\r\n    }\r\n  }\r\n  return mostFrequent;\r\n}\r\n","import { getMonthOrDayFromDate } from './get-month-or-day-from-date';\r\nimport { findMostFrequentNumber } from './find-most-frequent-number';\r\n\r\nexport const getTopDayMonthlyTransfers = areeyCLients => {\r\n  const arreyDates = areeyCLients.reduce((arr, client) => {\r\n    if (client.finances.debitIntervall === 'monthly') {\r\n      arr.push(getMonthOrDayFromDate(client.finances.nextDebitDate, 'day'));\r\n    }\r\n    return arr;\r\n  }, []);\r\n  return findMostFrequentNumber(arreyDates);\r\n};\r\n","export const creatClientsListWithoutFinancialData = areeyCLients => {\r\n  const newArr = [];\r\n  areeyCLients.map(client => {\r\n    const newItem = { ...client };\r\n    delete newItem.finances;\r\n    newArr.push(newItem);\r\n  });\r\n  return newArr;\r\n};\r\n","export const equalizeMonthlyPayments = (areeyCLients, newMontlyPayments) => {\r\n  const newArrayClientsWithChangedPaymentData = [];\r\n  areeyCLients.map(client => {\r\n    if (client.finances.debitIntervall === 'monthly') {\r\n      const newItem = structuredClone(client);\r\n      newItem.finances.nextDebitSum = (newMontlyPayments * 1).toFixed(2);\r\n      newArrayClientsWithChangedPaymentData.push(newItem);\r\n    }\r\n    if (client.finances.debitIntervall === 'quarterly') {\r\n      const newItem = structuredClone(client);\r\n      newItem.finances.nextDebitSum = (newMontlyPayments * 3).toFixed(2);\r\n      newArrayClientsWithChangedPaymentData.push(newItem);\r\n    }\r\n    if (client.finances.debitIntervall === 'half-yearly') {\r\n      const newItem = structuredClone(client);\r\n      newItem.finances.nextDebitSum = (newMontlyPayments * 6).toFixed(2);\r\n      newArrayClientsWithChangedPaymentData.push(newItem);\r\n    }\r\n    if (client.finances.debitIntervall === 'annual') {\r\n      const newItem = structuredClone(client);\r\n      newItem.finances.nextDebitSum = (newMontlyPayments * 12).toFixed(2);\r\n      newArrayClientsWithChangedPaymentData.push(newItem);\r\n    }\r\n  });\r\n  return newArrayClientsWithChangedPaymentData;\r\n};\r\n","import { createClientListByTransferMonth } from './create-clients-list-by-transfer-month';\r\n\r\nexport const creatClientsListWithDeficitBalances = (date, areeyCLients) => {\r\n  const arreyDate = date.split(/[.-]/);\r\n  const nextMonth =\r\n    date.split(/[.-]/)[1] === '12'\r\n      ? '01'\r\n      : `${+date.split(/[.-]/)[1] + 1}`.padStart(2, '0');\r\n  arreyDate[1] = nextMonth;\r\n  const newDate = arreyDate.join('-');\r\n  const arrayClientsToPayNextMonth = createClientListByTransferMonth(\r\n    newDate,\r\n    areeyCLients\r\n  );\r\n  const arrayCclientsWithDeficitBalances = arrayClientsToPayNextMonth.filter(\r\n    client => client.finances.accountBalance < client.finances.nextDebitSum\r\n  );\r\n  const dataClientsWithDeficitBalance = arrayCclientsWithDeficitBalances.reduce(\r\n    (arr, client) => {\r\n      const newDataClients = {\r\n        name: client.name + ' ' + client.preName,\r\n        eMail: client.eMail,\r\n        address: client.address,\r\n        deficit: client.finances.accountBalance - client.finances.nextDebitSum,\r\n      };\r\n      arr.push(newDataClients);\r\n      return arr;\r\n    },\r\n    []\r\n  );\r\n  return dataClientsWithDeficitBalance;\r\n};\r\n","export const sectionExit = (sectionOpen) => {\r\n  sectionOpen = true;\r\n  document.querySelector('.content-section').classList.add('content-section-open');\r\n  setTimeout(() => {\r\n    document.querySelector('.loader-beckdrop').classList.add('loader-beckdrop-is-hidden');\r\n    setTimeout(() => {\r\n      document.querySelector('.loader-beckdrop').style.display = 'none';\r\n    }, 2000);\r\n  }, 5000);\r\n};\r\n","export const sectionClos = (sectionOpen, arreyFunctionsRemuveListener) => {\r\n  sectionOpen = false;\r\n  arreyFunctionsRemuveListener.map((item) => {\r\n    item();\r\n  });\r\n  document.querySelector('.loader-beckdrop').style.display = 'flex';\r\n  document.querySelector('.loader-beckdrop').classList.remove('loader-beckdrop-is-hidden');\r\n  document.querySelector('.content-section').classList.remove('content-section-open');\r\n\r\n  if (document.querySelector('#content')) {\r\n    document.querySelector('#content').innerHTML = '';\r\n  }\r\n};\r\n","export const sectionLayoutTask_1 = ` <h2 class=\"task-titel\">Unteraufgaben - 1</h2>\r\n          <p class=\"task\">Wählen Sie den Monat des Jahres, um eine Liste aller Kunden zu erstellen, deren Geburtstag\r\n            in diesen Monat fällt.</p>\r\n          <div class=\"solution-wrapper\">\r\n            <div class=\"calendar\">\r\n              <form class=\"calendar-form\">\r\n                <label class=\"calendar-label\">Datum auswählen:\r\n                  <input class=\"calendar-input\" type=\"date\" id=\"calendar-date\" name=\"calendar\">\r\n                </label>\r\n                <button class=\"calendar-btn\" type=\"submit\">Schicken</button>\r\n              </form>\r\n            </div>\r\n            <div class=\"solution\">\r\n              <h3 class=\"solution-titel\">Liste der Kunden, deren Geburtstag in den ausgewählten Monat fällt:</h3>\r\n              <ul class=\"clients-data\"> </ul>\r\n            </div>\r\n          </div>`;\r\n","export const dateCorrection = (date) => {\r\n  const month = date.split(/[.-]/)[1];\r\n  const day = date.split(/[.-]/)[2];\r\n  const year = date.split(/[.-]/)[0];\r\n  return `${day}-${month}-${year}`;\r\n};\r\n","import { customers } from '../customers';\r\nimport { sectionLayoutTask_1 } from './subtask-1-initial-section-layout';\r\nimport { dateCorrection } from '../date-correction';\r\nimport { createClientListByBirthdayMonth } from '../create-clients-list-by-birthday-month';\r\n\r\nexport const subtask_1 = () => {\r\n  let clientsListMarkup = [];\r\n  const arrFunctionsRemuveListener = [];\r\n\r\n  if (document.querySelector('#content')) {\r\n    document.querySelector('#content').innerHTML = sectionLayoutTask_1;\r\n  }\r\n\r\n  if (document.getElementById('calendar-date')) {\r\n    document.getElementById('calendar-date').valueAsDate = new Date();\r\n  }\r\n\r\n  if (document.querySelector('.calendar-form')) {\r\n    const form = document.querySelector('.calendar-form');\r\n    const submitHandler = (event) => {\r\n      event.preventDefault();\r\n      const formDate = event.target.elements.calendar.value;\r\n      const correctFormDate = dateCorrection(formDate);\r\n      const arrClients = createClientListByBirthdayMonth(correctFormDate, customers);\r\n      clientsListMarkup = arrClients.map(\r\n        (client) =>\r\n          ` <li class=\"client\">\r\n                  <ul class=\"client-data-name\">\r\n                    <li>Nachname und Vorname:</li>\r\n                    <li>Geburtsdatum:</li>\r\n                    <li>E-Mail-Adresse:</li>\r\n                    <li>Adresse:</li>\r\n                  </ul>\r\n                  <ul class=\"client-data-value\">\r\n                    <li>${client.name} ${client.preName}</li>\r\n                    <li>${client.birthDate}</li>\r\n                    <li>${client.eMail}</li>\r\n                    <li>${client.address}</li>\r\n                  </ul>\r\n                </li>`\r\n      );\r\n      const clientsList = document.querySelector('.clients-data');\r\n      const clientsListTitel = document.querySelector('.solution-titel');\r\n\r\n      if (clientsList) {\r\n        clientsList.innerHTML = clientsListMarkup.join('');\r\n      }\r\n\r\n      if (clientsListTitel) {\r\n        clientsListTitel.style.display = 'block';\r\n      }\r\n    };\r\n\r\n    form.addEventListener('submit', submitHandler);\r\n\r\n    const deleteSubmitListenerTask_1 = () => {\r\n      form.removeEventListener('submit', submitHandler);\r\n      console.log('delete submitListenerTask_1');\r\n    };\r\n\r\n    arrFunctionsRemuveListener.push(deleteSubmitListenerTask_1);\r\n  }\r\n  return arrFunctionsRemuveListener;\r\n};\r\n","export const sectionLayoutTask_2 = ` <h2 class=\"task-titel\">Unteraufgaben - 2</h2>\r\n          <p class=\"task\">Wählen Sie den Monat des Jahres, um eine Liste aller Kunden zu erstellen, deren nächstes Überweisungsdatum in den gewählten Monat fällt.</p>\r\n          <div class=\"solution-wrapper\">\r\n            <div class=\"calendar\">\r\n              <form class=\"calendar-form\">\r\n                <label class=\"calendar-label\">Datum auswählen:\r\n                  <input class=\"calendar-input\" type=\"date\" id=\"calendar-date\" name=\"calendar\">\r\n                </label>\r\n                <button class=\"calendar-btn\" type=\"submit\">Schicken</button>\r\n              </form>\r\n            </div>\r\n            <div class=\"solution\">\r\n              <h3 class=\"solution-titel\">Liste der Kunden, deren nächstes Überweisungsdatum auf den ausgewählten Monat fällt:</h3>\r\n              <ul class=\"clients-data\"> </ul>\r\n            </div>\r\n          </div>`;\r\n","import { customers } from '../customers';\r\nimport { sectionLayoutTask_2 } from './subtask-2-initial-section-layout';\r\nimport { dateCorrection } from '../date-correction';\r\nimport { createClientListByTransferMonth } from '../create-clients-list-by-transfer-month';\r\n\r\nexport const subtask_2 = () => {\r\n  let clientsListMarkup = [];\r\n  const arrFunctionsRemuveListener = [];\r\n\r\n  if (document.querySelector('#content')) {\r\n    document.querySelector('#content').innerHTML = sectionLayoutTask_2;\r\n  }\r\n\r\n  if (document.getElementById('calendar-date')) {\r\n    document.getElementById('calendar-date').valueAsDate = new Date();\r\n  }\r\n\r\n  if (document.querySelector('.calendar-form')) {\r\n    const form = document.querySelector('.calendar-form');\r\n    const submitHandler = (event) => {\r\n      event.preventDefault();\r\n      const formDate = event.target.elements.calendar.value;\r\n      const correctFormDate = dateCorrection(formDate);\r\n      const arrClients = createClientListByTransferMonth(correctFormDate, customers);\r\n      clientsListMarkup = arrClients.map((client) => {\r\n        console.log('client :>> ', client);\r\n        return ` <li class=\"client\">\r\n                  <ul class=\"client-data-name\">\r\n                    <li>Nachname und Vorname:</li>\r\n                    <li>Überweisungsdatum:</li>\r\n                    <li>E-Mail-Adresse:</li>\r\n                    <li>Adresse:</li>\r\n                  </ul>\r\n                  <ul class=\"client-data-value\">\r\n                    <li>${client.name} ${client.preName}</li>\r\n                    <li>${client.finances.nextDebitDate}</li>\r\n                    <li>${client.eMail}</li>\r\n                    <li>${client.address}</li>\r\n                  </ul>\r\n                </li>`;\r\n      });\r\n      const clientsList = document.querySelector('.clients-data');\r\n      const clientsListTitel = document.querySelector('.solution-titel');\r\n\r\n      if (clientsList) {\r\n        clientsList.innerHTML = clientsListMarkup.join('');\r\n      }\r\n\r\n      if (clientsListTitel) {\r\n        clientsListTitel.style.display = 'block';\r\n      }\r\n    };\r\n\r\n    form.addEventListener('submit', submitHandler);\r\n\r\n    const deleteSubmitListenerTask_2 = () => {\r\n      form.removeEventListener('submit', submitHandler);\r\n      console.log('delete submitListenerTask_2');\r\n    };\r\n\r\n    arrFunctionsRemuveListener.push(deleteSubmitListenerTask_2);\r\n  }\r\n  return arrFunctionsRemuveListener;\r\n};\r\n","export const sectionLayoutTask_3 = ` <h2 class=\"task-titel\">Unteraufgaben - 3</h2>\r\n          <p class=\"task\">Um die E-Mail-Adresse des Kunden zu erhalten, geben Sie den Kundenamen ein.</p>\r\n          <div class=\"solution-wrapper\">\r\n            <div class=\"form-wrapper\">\r\n              <form class=\"clients-form\">\r\n                <label for=\"clients-name\" class=\"clients-label\">Geben Sie den Kundenamen ein:</label>\r\n                <input list=\"clientsNameListe\"  class=\"clients-input\" type=\"text\" id=\"clients-name\" name=\"clientName\">\r\n                <datalist id=\"clientsNameListe\">\r\n                \r\n                </datalist>\r\n                <button class=\"clients-btn\" type=\"submit\">Schicken</button>\r\n              </form>\r\n            </div>\r\n            <div class=\"solution\">\r\n              <h3 class=\"solution-titel\">Die E-Mail-Adresse des von Ihnen ausgewählten Kunden:</h3>\r\n             <div class=\"client-data\">\r\n               <p class=\"client-name\"></p>\r\n               <a class=\"client-e-mail\"></a>\r\n             </div>\r\n            </div>\r\n          </div>`;\r\n","export const getNamesAllClients = (customers) => {\r\n  const arrNamesAllClients = customers.map((client) => client.name);\r\n  return arrNamesAllClients;\r\n};\r\n","import { customers } from '../customers';\r\nimport { sectionLayoutTask_3 } from './subtask-3-initial-section-layout';\r\nimport { getEmailByName } from '../get-email-by-name';\r\nimport { getNamesAllClients } from '../get-names-all-clients';\r\n\r\nexport const subtask_3 = () => {\r\n  const arrFunctionsRemuveListener = [];\r\n\r\n  if (document.querySelector('#content')) {\r\n    document.querySelector('#content').innerHTML = sectionLayoutTask_3;\r\n  }\r\n\r\n  if (document.querySelector('#clientsNameListe')) {\r\n    const arrNamesAllClients = getNamesAllClients(customers);\r\n    const markup = arrNamesAllClients.map((name) => `<option>${name}</option>`);\r\n    document.querySelector('#clientsNameListe').innerHTML = markup.join('');\r\n  }\r\n\r\n  if (document.querySelector('.clients-form')) {\r\n    const form = document.querySelector('.clients-form');\r\n    const submitHandler = (event) => {\r\n      event.preventDefault();\r\n      const clientName = event.target.elements.clientName.value;\r\n      const eMail = getEmailByName(clientName, customers);\r\n\r\n      const pName = document.querySelector('.client-name');\r\n      const aMail = document.querySelector('.client-e-mail');\r\n      const clientsListTitel = document.querySelector('.solution-titel');\r\n\r\n      if (clientsListTitel) {\r\n        clientsListTitel.style.display = 'block';\r\n      }\r\n      pName.textContent = `${clientName}:`;\r\n      aMail.setAttribute('href', `mailto:${eMail}`);\r\n      aMail.textContent = eMail;\r\n      if (document.querySelector('.client-data')) {\r\n        document.querySelector('.client-data').style.display = 'flex';\r\n      }\r\n    };\r\n\r\n    form.addEventListener('submit', submitHandler);\r\n\r\n    const deleteSubmitListenerTask_3 = () => {\r\n      form.removeEventListener('submit', submitHandler);\r\n      console.log('delete submitListenerTask_3');\r\n    };\r\n\r\n    arrFunctionsRemuveListener.push(deleteSubmitListenerTask_3);\r\n  }\r\n  return arrFunctionsRemuveListener;\r\n};\r\n","import { customers } from './js/customers';\r\nimport { createClientListByBirthdayMonth } from './js/create-clients-list-by-birthday-month';\r\nimport { createClientListByTransferMonth } from './js/create-clients-list-by-transfer-month';\r\nimport { getEmailByName } from './js/get-email-by-name';\r\nimport { getTopDayMonthlyTransfers } from './js/get-top-day-monthly-transfers';\r\nimport { creatClientsListWithoutFinancialData } from './js/creat-clients-list-without-financial-data';\r\nimport { equalizeMonthlyPayments } from './js/equalize-monthly-payments';\r\nimport { creatClientsListWithDeficitBalances } from './js/creat-clients-list-with-deficit-balances';\r\n\r\nimport { sectionExit } from './js/section-exit';\r\nimport { sectionClos } from './js/section-clos';\r\nimport { subtask_1 } from './js/subtask-1/subtask-1';\r\nimport { subtask_2 } from './js/subtask-2/subtask-2';\r\nimport { subtask_3 } from './js/subtask-3/subtask-3';\r\n\r\nlet firstClick = false;\r\nlet sectionOpen = false;\r\nlet activTask = '';\r\nlet delaySetTimeout = 0;\r\nlet arreyFunctionsRemuveListener = [];\r\n\r\nconst buttonsList = document.querySelector('.task-nav');\r\nbuttonsList.addEventListener('click', (e) => {\r\n  if (e.target !== e.currentTarget) {\r\n    if (!firstClick) {\r\n      firstClick = true;\r\n      document.querySelector('.welcome-section').classList.add('welcome-section-invisibility');\r\n    }\r\n    const subtaskNumber = e.target.dataset.subtask;\r\n\r\n    if (activTask !== e.target) {\r\n      if (activTask !== '') {\r\n        activTask.classList.remove('task-nav-item-activ');\r\n        sectionClos(sectionOpen, arreyFunctionsRemuveListener);\r\n        arreyFunctionsRemuveListener = [];\r\n        delaySetTimeout = 4000;\r\n      }\r\n      activTask = e.target;\r\n      activTask.classList.add('task-nav-item-activ');\r\n\r\n      switch (subtaskNumber) {\r\n        case '1':\r\n          setTimeout(() => {\r\n            sectionExit(sectionOpen);\r\n            const remuveFunction = subtask_1();\r\n            arreyFunctionsRemuveListener.push(...remuveFunction);\r\n            console.log('arreyFunctionsRemuveListener :>> ', arreyFunctionsRemuveListener);\r\n          }, delaySetTimeout);\r\n          break;\r\n        case '2':\r\n          setTimeout(() => {\r\n            sectionExit(sectionOpen);\r\n            const remuveFunction = subtask_2();\r\n            arreyFunctionsRemuveListener.push(...remuveFunction);\r\n            console.log('arreyFunctionsRemuveListener :>> ', arreyFunctionsRemuveListener);\r\n          }, delaySetTimeout);\r\n          console.log('fanction-2');\r\n          break;\r\n        case '3':\r\n          setTimeout(() => {\r\n            sectionExit(sectionOpen);\r\n            const remuveFunction = subtask_3();\r\n            arreyFunctionsRemuveListener.push(...remuveFunction);\r\n            console.log('arreyFunctionsRemuveListener :>> ', arreyFunctionsRemuveListener);\r\n          }, delaySetTimeout);\r\n          console.log('fanction-3');\r\n          break;\r\n        case '4':\r\n          setTimeout(() => {\r\n            sectionExit(sectionOpen);\r\n            subtask_1();\r\n          }, delaySetTimeout);\r\n          console.log('fanction-4');\r\n          break;\r\n        case '5':\r\n          setTimeout(() => {\r\n            sectionExit(sectionOpen);\r\n            subtask_1();\r\n          }, delaySetTimeout);\r\n          console.log('fanction-5');\r\n          break;\r\n        case '6':\r\n          setTimeout(() => {\r\n            sectionExit(sectionOpen);\r\n            subtask_1();\r\n          }, delaySetTimeout);\r\n          console.log('fanction-6');\r\n          break;\r\n        case '7':\r\n          setTimeout(() => {\r\n            sectionExit(sectionOpen);\r\n            subtask_1();\r\n          }, delaySetTimeout);\r\n          console.log('fanction-7');\r\n          break;\r\n\r\n        default:\r\n          console.log('Invalid subscription type');\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\n// const usedDate = '27.10.2023';\r\n// const newPrice = 19.95;\r\n\r\n// console.log(\r\n//   '1) List of clients whose birthday is in the specified month: >>',\r\n//   createClientListByBirthdayMonth(usedDate, customers)\r\n// );\r\n// console.log(\r\n//   '2) List of clients whose next transfer date is in the specified month: >> ',\r\n//   createClientListByTransferMonth(usedDate, customers)\r\n// );\r\n\r\n// console.log('3) Email address for the client whose name has been entered: >> ', getEmailByName('Baker', customers));\r\n// console.log(\r\n//   '4) The most popular day of the month for monthly interval transfers: >> ',\r\n//   getTopDayMonthlyTransfers(customers)\r\n// );\r\n// console.log('5) Client list without financial information: >> ', creatClientsListWithoutFinancialData(customers));\r\n// console.log(\r\n//   '6) Introduction of a new monthly tariff for all customers: >> ',\r\n//   equalizeMonthlyPayments(customers, newPrice)\r\n// );\r\n\r\n// console.log(\r\n//   '7) Creation of a list of clients who have insufficient funds on their account to pay the next payment: >> ',\r\n//   creatClientsListWithDeficitBalances(usedDate, customers)\r\n// );\r\n"]}